import { signIn, signOut, useSession } from 'next-auth/react'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import useSWR from 'swr';
import Button from '../components/Button';
import Labels from '../components/Labels';
import styles from '../styles/Home.module.css'

const fetcher = (...args) => fetch(...args).then(res => res.json())

export default function Home() {
  const { data: session, status } = useSession();
  const { data: labels } = useSWR(status === 'authenticated' ? '/api/labels' : null, fetcher);
  const [label, setLabel] = useState(null)
  const [deleting, setDeleting] = useState(false)
  const { data: labelDetails, mutate } = useSWR(label ? `/api/labels/${label.id}` : null, fetcher);

  useEffect(() => {
    let subscribed = true

    async function deleteMessages() {
      let details;
      try {
        do {
          if (!deleting) {
            return;
          }

          if (!subscribed) {
            return
          }

          details = await fetcher(`/api/labels/${label.id}/delete`)
          mutate(details);
        } while (details.messagesTotal > 0)
      } catch (err) {
        console.error(err)
      } finally {
        setDeleting(false)
      }
    }

    if (deleting) {
      deleteMessages()
        .catch(err => console.error(err))
    }

    return () => subscribed = false
  }, [deleting, label, mutate])


  return (
    <div className="flex flex-col content-center items-center h-[100vh]">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-6xl font-semibold">
          Welcome to <a className='text-cyan-500 hover:underline' href={process.env.NEXT_PUBLIC_VERCEL_URL}>Gmail Purge</a>
        </h1>

        <div className={styles.description}>
          {
            status === "authenticated"
              ? <div className='flex w-full space-x-4 items-center'>
                <p>Signed in as {session.user.email}</p>
                <Button onClick={signOut}>Sign Out</Button>
              </div>
              : <Button onClick={() => signIn('google')}>Sign In</Button>
          }
        </div>

        {
          status === "authenticated"
            ? <div className='w-full flex content-center justify-around'>
              <div className='w-1/2'>
                <div >
                  <Labels labels={labels} label={label} selectedAltText={labelDetails ? `${labelDetails.messagesTotal} Messages` : null} onChange={setLabel} />
                </div>
              </div>
              <Button onClick={() => setDeleting(!deleting)}>{deleting ? 'Cancel' : 'Start Deleting!'}</Button>
            </div>
            : null
        }
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
